version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: primini-backend-prod
    restart: unless-stopped
    volumes:
      - backend_static:/app/staticfiles
      - backend_media:/app/media
    environment:
      - DJANGO_DEBUG=false
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DATABASE_URL=postgresql://primini:${POSTGRES_PASSWORD}@db:5432/primini
    depends_on:
      - db
    networks:
      - primini-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: primini-frontend-prod
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://localhost:8000/api}
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - primini-network

  nginx:
    image: nginx:alpine
    container_name: primini-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - backend_static:/var/www/static:ro
      - backend_media:/var/www/media:ro
    depends_on:
      - backend
      - frontend
    networks:
      - primini-network

  db:
    image: postgres:16-alpine
    container_name: primini-db-prod
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=primini
      - POSTGRES_USER=primini
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - primini-network

volumes:
  postgres_data:
  backend_static:
  backend_media:

networks:
  primini-network:
    driver: bridge

